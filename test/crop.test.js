/* global describe it expect */
const { convert } = require('../lib')

const srcData = Buffer.from('iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAFUlEQVR42mPk+MPwn4EIwDiqkL4KAYf9FClxi+lBAAAAAElFTkSuQmCC', 'base64')
const fixtures = new Map([
  // NOTE: PNG is mutable so it can't be presented as fixture
  ['JPEG', '/9j/4AAQSkZJRgABAQACWAJYAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCAAyAGQDAREAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAj/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAr/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwCsEq6M8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB//9k='],
  ['TIFF', 'SUkqAGQAAAB42u3RQQkAAAgEMJ/XP6+gNQS3CkvXFGfEhw98+MCHD3z4wIcPfODDBz584MMHPnzgAx8+8OEDHz7w4QMfPvCBDx/48IEPH/jwgQ98+MCHD3z4wIcPfLy1KuZklxQAAAEDAAEAAABkAAAAAQEDAAEAAAAyAAAAAgEDAAQAAABqAQAAAwEDAAEAAAAIAAAABgEDAAEAAAACAAAACgEDAAEAAAABAAAAEQEEAAEAAAAIAAAAEgEDAAEAAAABAAAAFQEDAAEAAAAEAAAAFgEDAAEAAAAyAAAAFwEEAAEAAABcAAAAGgEFAAEAAABaAQAAGwEFAAEAAABiAQAAHAEDAAEAAAABAAAAKAEDAAEAAAABAAAAKQEDAAIAAAAAAAEAPQEDAAEAAAACAAAAPgEFAAIAAACiAQAAPwEFAAYAAAByAQAAUgEDAAEAAAACAAAAAAAAAFgCAAABAAAAWAIAAAEAAAAIAAgACAAIAP8J16P/////f+F6VP//////zMxM//////+ZmZn/////f2ZmJv/////vKFwP/////38bDVD//////1c5VP////8=']
])

describe(('convert, resize=crop'), () => {
  for (const [format, result] of fixtures) {
    it(`format=${format}`, async () => {
      const opts = { resize: 'crop', width: 100, height: 50, quality: 100 }
      const output = await convert({ ...opts, srcData, format })

      expect(output.toString('base64')).to.be.equal(result)
    })
  }
})
