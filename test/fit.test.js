/* global describe it expect */
const { convert } = require('../lib')

const srcData = Buffer.from('iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAFUlEQVR42mPk+MPwn4EIwDiqkL4KAYf9FClxi+lBAAAAAElFTkSuQmCC', 'base64')
const fixtures = new Map([
  // NOTE: PNG is mutable so it can't be presented as fixture
  ['JPEG', '/9j/4AAQSkZJRgABAQACWAJYAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCABkAGQDAREAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAj/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAr/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwCsEq6M8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB//Z'],
  ['TIFF', 'SUkqAKQAAAB42u3RMQ0AAAgDMM7510sCMuBoLTRdU7wRHz7w4QMfPvDhAx8+8IEPH/jwgQ8f+PCBD3z4wIcPfPjAhw98+MAHPnzgwwc+fODDBz7w4QMfPvDhAx8+8OEDH/jwgQ8f+PCBDx/4wIcPfPjAhw98+MCHD3zgwwc+fODDBz584AMfPvDhAx8+8OEDHz7wgQ8f+PCBDx/48MGpBWkYyS0UAAABAwABAAAAZAAAAAEBAwABAAAAZAAAAAIBAwAEAAAAqgEAAAMBAwABAAAACAAAAAYBAwABAAAAAgAAAAoBAwABAAAAAQAAABEBBAABAAAACAAAABIBAwABAAAAAQAAABUBAwABAAAABAAAABYBAwABAAAAZAAAABcBBAABAAAAnAAAABoBBQABAAAAmgEAABsBBQABAAAAogEAABwBAwABAAAAAQAAACgBAwABAAAAAQAAACkBAwACAAAAAAABAD0BAwABAAAAAgAAAD4BBQACAAAA4gEAAD8BBQAGAAAAsgEAAFIBAwABAAAAAgAAAAAAAABYAgAAAQAAAFgCAAABAAAACAAIAAgACAD/Cdej/////3/helT//////8zMTP//////mZmZ/////39mZib/////7yhcD/////9/Gw1Q//////9XOVT/////']
])

describe(('convert, resize=fit'), () => {
  for (const [format, result] of fixtures) {
    it(`format=${format}`, async () => {
      const opts = { resize: 'fit', width: 100, height: 100, quality: 100 }
      const output = await convert({ ...opts, srcData, format })

      expect(output.toString('base64')).to.be.equal(result)
    })
  }
})
