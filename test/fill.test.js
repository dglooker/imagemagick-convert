/* global describe it expect */
const { convert } = require('../lib')

const srcData = Buffer.from('iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAFUlEQVR42mPk+MPwn4EIwDiqkL4KAYf9FClxi+lBAAAAAElFTkSuQmCC', 'base64')
const fixtures = new Map([
  // NOTE: PNG is mutable so it can't be presented as fixture
  ['JPEG', '/9j/4AAQSkZJRgABAQACWAJYAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCABkAMgDAREAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAj/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAr/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwCsEq6M8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB//Z'],
  ['TIFF', 'SUkqANgAAAB42u3TQQ0AAAgEIJ/XP6+bFrCB0IF0TQGn+AF+gB/gB/gBfoAf4Af4AX4AfoAf4Af4AX6AH+AH+AF+gB+AH+AH+AF+gB/gB/gBfoAf4AfgB/gBfoAf4Af4AX6AH+AH+AH4AX6AH+AH+AF+gB/gB/gBfgB+gB/gB/gBfoAf4Af4AX6AH4Af4Af4AX6AH+AH+AF+gB/gB+AH+AF+gB/gB/gBfoAf4Af4AfgBfoAf4Af4AX6AH+AH+AF+AH6AH+AH+AF+gB/gB/gBfsBjC1+SyS0AFAAAAQMAAQAAAMgAAAABAQMAAQAAAGQAAAACAQMABAAAAN4BAAADAQMAAQAAAAgAAAAGAQMAAQAAAAIAAAAKAQMAAQAAAAEAAAARAQQAAQAAAAgAAAASAQMAAQAAAAEAAAAVAQMAAQAAAAQAAAAWAQMAAQAAAGQAAAAXAQQAAQAAAM8AAAAaAQUAAQAAAM4BAAAbAQUAAQAAANYBAAAcAQMAAQAAAAEAAAAoAQMAAQAAAAEAAAApAQMAAgAAAAAAAQA9AQMAAQAAAAIAAAA+AQUAAgAAABYCAAA/AQUABgAAAOYBAABSAQMAAQAAAAIAAAAAAAAAWAIAAAEAAABYAgAAAQAAAAgACAAIAAgA/wnXo/////9/4XpU///////MzEz//////5mZmf////9/ZmYm/////+8oXA//////fxsNUP//////VzlU/////w==']
])

describe(('convert, resize=fill'), () => {
  for (const [format, result] of fixtures) {
    it(`format=${format}`, async () => {
      const opts = { resize: 'fill', width: 200, height: 100, quality: 100 }
      const output = await convert({ ...opts, srcData, format })

      expect(output.toString('base64')).to.be.equal(result)
    })
  }
})
